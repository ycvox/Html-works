npm init -y

npm install express jswebtoken


page - server.js

// server.js â€” Simplest JWT Authentication Example
const express = require('express');
const jwt = require('jsonwebtoken');
const app = express();
app.use(express.json());

const SECRET_KEY = 'my_secret_key'; // only for demo
const USER = { username: 'admin', password: '1234' }; // hardcoded user

// ðŸŸ¢ Login route
app.post('/login', (req, res) => {
  const { username, password } = req.body;
  if (username === USER.username && password === USER.password) {
    const token = jwt.sign({ username }, SECRET_KEY, { expiresIn: '1h' });
    return res.json({ token });
  }
  res.status(401).json({ message: 'Invalid credentials' });
});

// ðŸŸ¡ Protected route
app.get('/protected', (req, res) => {
  const authHeader = req.headers.authorization;
  if (!authHeader) return res.status(401).json({ message: 'Missing token' });

  const token = authHeader.split(' ')[1];
  try {
    const decoded = jwt.verify(token, SECRET_KEY);
    res.json({ message: `Welcome ${decoded.username}, you accessed a protected route!` });
  } catch {
    res.status(403).json({ message: 'Invalid or expired token' });
  }
});

app.listen(3000, () => console.log('âœ… JWT demo running at http://localhost:3000'));


command:
node server.js

postman
https://localhost:3000/login - create token
In POST ->Body -> raw -> JSON
{
  "username": "admin",
  "password": "1234"
}

click send

response : 
{"token": "wseuifghuierfgh..."}

copy the token

go to (GET)

https;//localhost:3000/protected - view token
in this use header option - Key -> authorization ; value -> Bearer <token created>

response
welcome

